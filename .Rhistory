library(ggplot2)
library(readr)
library(dplyr)
library(choroplethr)
library(extrafont)
library(extrafontdb)
library(RColorBrewer)
library(scales)
library(gridExtra)
library(choroplethrMaps)
#'x' is the column of a data.frame that holds 2 digit state codes
stateFromLower <-function(x) {
#read 52 state codes into local variable [includes DC (Washington D.C. and PR (Puerto Rico)]
st.codes<-data.frame(
state=as.factor(c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA",
"HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME",
"MI", "MN", "MO", "MS",  "MT", "NC", "ND", "NE", "NH", "NJ", "NM",
"NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN",
"TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY")),
full=as.factor(c("alaska","alabama","arkansas","arizona","california","colorado",
"connecticut","district of columbia","delaware","florida","georgia",
"hawaii","iowa","idaho","illinois","indiana","kansas","kentucky",
"louisiana","massachusetts","maryland","maine","michigan","minnesota",
"missouri","mississippi","montana","north carolina","north dakota",
"nebraska","new hampshire","new jersey","new mexico","nevada",
"new york","ohio","oklahoma","oregon","pennsylvania","puerto rico",
"rhode island","south carolina","south dakota","tennessee","texas",
"utah","virginia","vermont","washington","wisconsin",
"west virginia","wyoming"))
)
#create an nx1 data.frame of state codes from source column
st.x<-data.frame(state=x)
#match source codes with codes from 'st.codes' local variable and use to return the full state name
refac.x<-st.codes$full[match(st.x$state,st.codes$state)]
#return the full state names in the same order in which they appeared in the original source
return(refac.x)
}
# import data
hc1 <- read.csv("PlanAttributes.csv", stringsAsFactors = FALSE)
# overview of the 50 first rows
head(hc1$TEHBInnTier1FamilyMOOP, 50)
hc1$TEHBInnTier1FamilyMOOP<- gsub(',', '', hc1$TEHBInnTier1FamilyMOOP)
hc1$TEHBInnTier1FamilyMOOP<- gsub('\\$', '', hc1$TEHBInnTier1FamilyMOOP)
hc1$moop<- as.numeric(hc1$TEHBInnTier1FamilyMOOP)
hc1$moop[is.na(hc1$moop)] <- 0
ggplot(hc1, aes(x = hc1$moop)) + geom_histogram()
# There’s a lot of plans in there that have a zero family MOOP. That’s not accurate.
# I will only stick to plans that actually have a dollar amount.
moop <- subset(hc1, moop > 0)
# I’m going to map this to see which states have the worst MOOP on average for a family.
# I used a function that turns state abbreviations to a format that choropleth can actually use.
df <- aggregate(hc1$moop, list(hc1$StateCode), mean)
df$region<-stateFromLower(df$Group.1)
df$value <- df$x
choro = StateChoropleth$new(df)
choro$title = "Average Max Out of Pocket"
choro$set_num_colors(1)
myPalette <- colorRampPalette(brewer.pal(9, "Reds"))
choro$ggplot_polygon = geom_polygon(aes(fill = value), color = NA)
choro$ggplot_scale = scale_fill_gradientn(name = "MOOP", colours = myPalette(9))
choro$render()
source("R/function_stateFromLower.R")
source("function_stateFromLower.R")
df$region<-stateFromLower(df$Group.1)
library(ggplot2)
library(readr)
library(dplyr)
library(choroplethr)
library(extrafont)
library(extrafontdb)
library(RColorBrewer)
library(scales)
library(gridExtra)
library(choroplethrMaps)
# import data
planAttributes <- read.csv("PlanAttributes.csv", stringsAsFactors = FALSE)
# overview of the 50 first rows
head(planAttributes$TEHBInnTier1FamilyMOOP, 50)
# overview of the 50 first rows
head(planAttributes$TEHBInnTier1FamilyMOOP, 50)
# overview of the 50 first rows
head(planAttributes$TEHBInnTier1FamilyMOOP)
